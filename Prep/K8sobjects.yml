apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    name: nginx
spec:
  containers:
  - name: nginx
    image: nginx
    ports:
      - containerPort: 80 

---
apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx-rc
spec:
  replicas: 2
  selector:
    name: nginx
  template:
    metadata:
      name: nginx
      labels:
        name: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  type: NodePort
  selector:
    name: nginx
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30001

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-config
data:
  myname: teja


apiVersion: v1
kind: Pod
metadata:
  name: config-demo-pod
spec:
  containers:
    - name: demo
      image: alpine
      command: ["sleep", "3600"]
      env:
        - name: myname  
          valueFrom:
            configMapKeyRef:
              name: demo-config 
              key: myname

--- 

apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-volume-config
data:
  test.yml: |
    test1: teja
    test2: surya
    test3: venkata



apiVersion: v1
kind: Pod
metadata:
  name: config-volume-demo
spec:
  containers:
  - name: my-container
    image: busybox
    command: [ "sleep", "3600" ]
    volumeMounts:
    - name: config-volume
      mountPath: /etc/config
  volumes:
  - name: config-volume
    configMap:
      name: demo-volume-config

---
apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
data:
  password: RGV2b3BAMTIzNAo=

# Base64 encoded password: 
# echo Devop@1234 | base64 -w 0
# RGV2b3BAMTIzNAo=
# echo 'RGV2b3BAMTIzNAo=' | base64 --decode
# Encode a file : base64 myfile.txt



apiVersion: v1
kind: Pod
metadata:
  name: secret-demo-pod
spec:
  containers:
    - name: demo
      image: alpine
      command: ["sleep", "3600"]
      env:
        - name: password  
          valueFrom:
            secretKeyRef:
              name: mysecret 
              key: password

---
#   kubectl create secret generic my-secret --from-file=path/to/bar
# kubectl create secret generic mysecret --from-literal=key1=value1
# Base64 encoded password: 
# echo Devop@1234 | base64 -w 0
# RGV2b3BAMTIzNAo=
# echo 'RGV2b3BAMTIzNAo=' | base64 --decode
# Encode a file : base64 myfile.txt
# base64 config.txt

apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
data: 
    password: RGV2b3BAMTIzNAo=



apiVersion: v1
kind: Pod
metadata:
  name: secret-volume-demo
spec:
  containers:
  - name: my-container
    image: busybox
    command: [ "sleep", "3600" ]
    volumeMounts:
    - name: secret-volume
      mountPath: /etc/config
  volumes:
  - name: secret-volume
    secret:
      secretName: mysecret

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myingress
  labels:
    name: myingress
spec:
  rules:
  - host: <Host>
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: <Service>
            port: 
              number: <Port>
